
<div class="container">
    <h1 class="text-center mt-5 mb-4">Image Detail</h1>
    <div class="row justify-content-center">
        <% imagePaths.forEach(imagePath => { %>
            <div class="col-6 col-md-4 col-lg-3 mb-4">
                <!-- 이미지와 체크박스를 함께 렌더링 -->
                <div class="card position-relative">
                    <img src="<%= imagePath %>" class="card-img-top" alt="Image" onclick="toggleCheckbox('<%= imagePath %>')">
                    <input type="checkbox" class="image-checkbox position-absolute top-0 start-0 m-3" id="<%= imagePath %>" value="<%= imagePath %>">
                    <div class="card-body">
                        <label class="card-title form-check-label" for="<%= imagePath %>"><%= imagePath.split('/').pop() %></label>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>

    <div class="text-center mb-4 fixed-bottom">
        <button class="btn btn-danger me-2" onclick="deleteFiles()">파일 삭제</button>
        <button class="btn btn-primary me-2" onclick="addFiles()">파일 추가</button>
        <a href="#" class="btn btn-secondary" onclick="history.back()">뒤로가기</a>
    </div>
</div>






<script>
    
    function toggleCheckbox(imagePath) {
        var checkbox = document.getElementById(imagePath);
        checkbox.checked = !checkbox.checked;
    }
    
    function deleteFiles() {
    // 선택된 이미지의 경로를 가져오는 로직
    const selectedImages = document.querySelectorAll('.image-checkbox:checked');
    const imagePaths = Array.from(selectedImages).map(checkbox => checkbox.value);

    // 선택된 이미지의 경로를 서버로 전송
    fetch('/data/getimage_detail', {
        method: 'delete',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ imagePaths: imagePaths })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Failed to delete images');
        }
        return response.json();
    })
    .then(data => {
        console.log('삭제된 이미지들:', data.deletedImages);
        // 삭제 성공 시 화면 갱신 또는 알림 처리 등 추가 가능
        alert("파일이 삭제되었습니다.")
        location.reload()
    })
    .catch(error => {
        console.error('이미지 삭제 오류:', error.message);
        // 삭제 실패 시 알림 처리 등 추가 가능
        alert("파일 삭제에 실패했습니다.")
    });
}

    function addFiles() {
        // 파일 선택 창 열기
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.multiple = true; // 다중 파일 선택 가능하도록 설정
        fileInput.accept = 'image/*'; // 이미지 파일만 선택 가능하도록 설정
        
        // type과 item_seq 가져오기
        const urlParams = new URLSearchParams(window.location.search);
        const type = urlParams.get('type');

        const url = window.location.href.split('?')[0];
        const urlParts = url.split('/');
        const item_seq = urlParts[urlParts.length - 1];
        console.log(type, item_seq)

        fileInput.addEventListener('change', function() {
            const selectedFiles = Array.from(fileInput.files);
            
            // 선택된 파일들을 FormData 객체에 추가
            const formData = new FormData();
            selectedFiles.forEach(file => {
                formData.append('files', file);
            });
            
            // type과 item_seq를 FormData에 추가
            formData.append('type', type);
            formData.append('item_seq', item_seq);
            console.log(type, item_seq)
            fetch('/data/getimage_detail/?type=' + type + '&item_seq=' + item_seq, {
                method: 'POST',
                body: formData
            })

            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to upload files');
                }
                return response.json();
            })
            .then(data => {
                console.log('업로드 성공:', data);
                // 업로드 성공 시 화면 갱신 또는 알림 처리 등 추가 가능
                alert("파일이 업로드되었습니다.");
                location.reload();
            })
            .catch(error => {
                console.error('파일 업로드 오류:', error.message);
                // 업로드 실패 시 알림 처리 등 추가 가능
                alert("파일 업로드에 실패했습니다.");
            });
        });
        fileInput.click();
    }

</script>
